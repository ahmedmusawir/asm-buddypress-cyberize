{"version":3,"sources":["GoogleMap.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","$","new_map","$el","$markers","find","args","zoom","center","google","maps","LatLng","mapTypeId","MapTypeId","ROADMAP","map","Map","markers","each","$marker","latlng","attr","marker","Marker","position","push","html","infowindow","InfoWindow","content","event","addListener","open","add_marker","this","bounds","LatLngBounds","lat","lng","extend","setCenter","getCenter","setZoom","fitBounds","center_map","document","ready","jQuery"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,GACxe,cAEA,SAAWK,GAcT,SAASC,EAAQC,GAEf,IAAIC,EAAWD,EAAIE,KAAK,WAGpBC,EAAO,CACTC,KAAM,GACNC,OAAQ,IAAIC,OAAOC,KAAKC,OAAO,EAAG,GAClCC,UAAWH,OAAOC,KAAKG,UAAUC,SAI/BC,EAAM,IAAIN,OAAOC,KAAKM,IAAIb,EAAI,GAAIG,GActC,OAXAS,EAAIE,QAAU,GAGdb,EAASc,KAAK,YAyBhB,SAAoBC,EAASJ,GAE3B,IAAIK,EAAS,IAAIX,OAAOC,KAAKC,OAAOQ,EAAQE,KAAK,YAAaF,EAAQE,KAAK,aAGvEC,EAAS,IAAIb,OAAOC,KAAKa,OAAO,CAClCC,SAAUJ,EACVL,IAAKA,IAOP,GAHAA,EAAIE,QAAQQ,KAAKH,GAGbH,EAAQO,OAAQ,CAElB,IAAIC,EAAa,IAAIlB,OAAOC,KAAKkB,WAAW,CAC1CC,QAASV,EAAQO,SAInBjB,OAAOC,KAAKoB,MAAMC,YAAYT,EAAQ,QAAS,WAC7CK,EAAWK,KAAKjB,EAAKO,MA9CvBW,CAAWhC,EAAEiC,MAAOnB,KAgExB,SAAoBA,GAElB,IAAIoB,EAAS,IAAI1B,OAAOC,KAAK0B,aAG7BnC,EAAEiB,KAAKH,EAAIE,QAAS,SAAU9B,EAAGmC,GAC/B,IAAIF,EAAS,IAAIX,OAAOC,KAAKC,OAAOW,EAAOE,SAASa,MAAOf,EAAOE,SAASc,OAE3EH,EAAOI,OAAOnB,KAIU,GAAtBL,EAAIE,QAAQnB,QAEdiB,EAAIyB,UAAUL,EAAOM,aACrB1B,EAAI2B,QAAQ,KAGZ3B,EAAI4B,UAAUR,GA9EhBS,CAAW7B,GAGJA,EAgGTd,EAAE4C,UAAUC,MAAM,WAChB7C,EAAE,YAAYiB,KAAK,WAEXhB,EAAQD,EAAEiC,WA3ItB,CA8IGa,SAED,KAAK,GAAG,CAAC","file":"GoogleMap.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n(function ($) {\n  /*\n   *  new_map\n   *\n   *  This function will render a Google Map onto the selected jQuery element\n   *\n   *  @type  function\n   *  @date  8/11/2013\n   *  @since 4.3.0\n   *\n   *  @param $el (jQuery element)\n   *  @return  n/a\n   */\n\n  function new_map($el) {\n    // var\n    var $markers = $el.find('.marker');\n\n    // vars\n    var args = {\n      zoom: 16,\n      center: new google.maps.LatLng(0, 0),\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    };\n\n    // create map\n    var map = new google.maps.Map($el[0], args);\n\n    // add a markers reference\n    map.markers = [];\n\n    // add markers\n    $markers.each(function () {\n      add_marker($(this), map);\n    });\n\n    // center map\n    center_map(map);\n\n    // return\n    return map;\n  }\n\n  /*\n   *  add_marker\n   *\n   *  This function will add a marker to the selected Google Map\n   *\n   *  @type  function\n   *  @date  8/11/2013\n   *  @since 4.3.0\n   *\n   *  @param $marker (jQuery element)\n   *  @param map (Google Map object)\n   *  @return  n/a\n   */\n\n  function add_marker($marker, map) {\n    // var\n    var latlng = new google.maps.LatLng($marker.attr('data-lat'), $marker.attr('data-lng'));\n\n    // create marker\n    var marker = new google.maps.Marker({\n      position: latlng,\n      map: map\n    });\n\n    // add to array\n    map.markers.push(marker);\n\n    // if marker contains HTML, add it to an infoWindow\n    if ($marker.html()) {\n      // create info window\n      var infowindow = new google.maps.InfoWindow({\n        content: $marker.html()\n      });\n\n      // show info window when marker is clicked\n      google.maps.event.addListener(marker, 'click', function () {\n        infowindow.open(map, marker);\n      });\n    }\n  }\n\n  /*\n   *  center_map\n   *\n   *  This function will center the map, showing all markers attached to this map\n   *\n   *  @type  function\n   *  @date  8/11/2013\n   *  @since 4.3.0\n   *\n   *  @param map (Google Map object)\n   *  @return  n/a\n   */\n\n  function center_map(map) {\n    // vars\n    var bounds = new google.maps.LatLngBounds();\n\n    // loop through all markers and create bounds\n    $.each(map.markers, function (i, marker) {\n      var latlng = new google.maps.LatLng(marker.position.lat(), marker.position.lng());\n\n      bounds.extend(latlng);\n    });\n\n    // only 1 marker?\n    if (map.markers.length == 1) {\n      // set center of map\n      map.setCenter(bounds.getCenter());\n      map.setZoom(16);\n    } else {\n      // fit to bounds\n      map.fitBounds(bounds);\n      // map.setCenter( bounds.getCenter() );\n      // map.setZoom( 11 );\n    }\n  }\n\n  /*\n   *  document ready\n   *\n   *  This function will render each map when the document is ready (page has loaded)\n   *\n   *  @type  function\n   *  @date  8/11/2013\n   *  @since 5.0.0\n   *\n   *  @param n/a\n   *  @return  n/a\n   */\n  // global var\n  var map = null;\n\n  $(document).ready(function () {\n    $('.acf-map').each(function () {\n      // create map\n      map = new_map($(this));\n    });\n  });\n})(jQuery);\n\n},{}]},{},[1]);\n"]}